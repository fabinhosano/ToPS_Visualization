/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package classes;

import com.sun.org.apache.bcel.internal.generic.PUTSTATIC;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author fabinhosano
 */
public final class Modelo extends javax.swing.JFrame {

    /**
     * Creates new form Modelo
     */
    public Modelo() {
        carregarMenuModelo();

        setVisible(true);
        setDefaultCloseOperation(HIDE_ON_CLOSE);
        setTitle("ToPS Visualization - Modelo");
        setExtendedState(MAXIMIZED_BOTH);
        
    }

    public void carregarMenuModelo() {
        initComponents();

        getContentPane().repaint();
        
        menu.remove(menuModelo);
        
        //radioButtonRadial.setVisible(false);
        //radioButtonTree.setVisible(false);

        comboBoxModelo.removeAllItems();
        comboBoxModelo.addItem("Simular");
        comboBoxModelo.addItem("Treinar");
        comboBoxModelo.addItem("Visualizar");
        
        UIManager.put("Button.defaultButtonFollowsFocus", Boolean.TRUE);
    }

    public void carregarModelo() {
        if (comboBoxModelo.getSelectedItem().equals("Simular")) {
            Simular simular = new Simular();
            simular.setSize(1360, 750);

            add(simular);
            setTitle("ToPS Visualization - Modelo (Simular)");
            repaint();
            pack();
        } else {
            if (comboBoxModelo.getSelectedItem().equals("Treinar")) {
                Treinar treinar = new Treinar();
                treinar.setSize(1360, 750);

                add(treinar);
                setTitle("ToPS Visualization - Modelo (Treinar)");
                repaint();
                pack();
            } else {
                if (comboBoxModelo.getSelectedItem().equals("Visualizar")) {
                    Visualizar visualizar = new Visualizar();
                    visualizar.setSize(1360, 750);

                    setContentPane(visualizar.getPanel());
                    setTitle("ToPS Visualization - Modelo (Visualizar)");
                    getContentPane().repaint();
                    pack();
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        comboBoxModelo = new javax.swing.JComboBox();
        buttonSelecionar = new javax.swing.JButton();
        menu = new javax.swing.JMenuBar();
        menuModelo = new javax.swing.JMenu();
        menuFecharModelo = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        comboBoxModelo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        buttonSelecionar.setText("Selecionar");
        buttonSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSelecionarActionPerformed(evt);
            }
        });

        menuModelo.setText("Modelo");
        menuModelo.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                menuModeloMenuSelected(evt);
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
        });
        menu.add(menuModelo);

        menuFecharModelo.setText("Fechar");
        menuFecharModelo.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                menuFecharModeloMenuSelected(evt);
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
        });
        menu.add(menuFecharModelo);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(comboBoxModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonSelecionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSelecionarActionPerformed
        getContentPane().removeAll();

        //removendo o menu fechar modelo para organizar a barra de menus
        menu.remove(menuFecharModelo);

        //adcionando os menus da barra de menus
        menu.add(menuModelo);
        menu.add(menuFecharModelo);

        getContentPane().repaint();

        carregarModelo();
    }//GEN-LAST:event_buttonSelecionarActionPerformed

    private void menuModeloMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_menuModeloMenuSelected
        int retornarMenu = JOptionPane.showConfirmDialog(rootPane,
                "Deseja retornar ao menu principal?",
                "ToPS Visualization - Modelo", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);

        if (retornarMenu == JOptionPane.YES_OPTION) {
            getContentPane().removeAll();

            carregarMenuModelo();
        }
    }//GEN-LAST:event_menuModeloMenuSelected

    private void menuFecharModeloMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_menuFecharModeloMenuSelected
        int fechar = JOptionPane.showConfirmDialog(rootPane, "Deseja realmente fechar o modelo?",
                "ToPS Visualization", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);

        if (fechar == JOptionPane.YES_OPTION) {
            dispose();
        }
    }//GEN-LAST:event_menuFecharModeloMenuSelected
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonSelecionar;
    private javax.swing.JComboBox comboBoxModelo;
    private javax.swing.JMenuBar menu;
    private javax.swing.JMenu menuFecharModelo;
    private javax.swing.JMenu menuModelo;
    // End of variables declaration//GEN-END:variables
}
